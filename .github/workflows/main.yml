name: Build and Sign APK from Smali

on: push

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 16
        uses: actions/setup-java@v3
        with:
          java-version: '16'
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          cmdline-tools-version: 9862592

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install Build-tools & platforms
        run: sdkmanager "build-tools;29.0.3"

      - name: Set PATH for zipalign
        run: echo "PATH=/usr/local/lib/android/sdk/build-tools/29.0.3:$PATH" >> $GITHUB_ENV

      - name: Download rescource
        run: |
          wget https://github.com/632259889/testapk/releases/download/v1.1/android.jar -O android.jar
          wget https://github.com/632259889/testapk/releases/download/v1.4/am.keystore -O release.keystore
          wget https://github.com/632259889/testapk/releases/download/v1.3/bundletool-all-1.15.6.jar -O bundletool.jar
          wget https://github.com/632259889/testapk/releases/download/v1.0/apktool.zip -O apktool.zip
        working-directory: /Users/runner/work/testapk



      - name: Unzip apktool
        run: |
          unzip apktool.zip
          chmod 777 ./apktool/apktool
          chmod 777 ./apktool/apktool.jar
          echo "PATH=/Users/runner/work/testapk/apktool:$PATH" >> $GITHUB_ENV
          echo "PATH=/Users/runner/Library/Android/sdk/build-tools/29.0.3/aapt2:$PATH" >> $GITHUB_ENV
        working-directory: /Users/runner/work/testapk

      #smali 代码转成apk
      - name: Build APK from Smali
        run: java -jar ./apktool/apktool.jar b ./testapk/ --use-aapt2 -o a.apk
        working-directory: /Users/runner/work/testapk

      # - name: Align APK
      #   run: /Users/runner/Library/Android/sdk/build-tools/29.0.3/zipalign -v 4 a.apk a_align.apk
      #   working-directory: /Users/runner/work/testapk

      # - name: Sign APK
      #   run: /Users/runner/Library/Android/sdk/build-tools/29.0.3/apksigner sign --ks release.keystore --ks-pass pass:'${{ secrets.KEY_STORE_PASSWORD }}' --out a_align_sign.apk a_align.apk
      #   working-directory: /Users/runner/work/testapk

      #apk转成aab如下
      - name: apk convert aab
        run: |
          java -jar ./apktool/apktool.jar d a.apk -s -o old_apk_dir
          /Users/runner/Library/Android/sdk/build-tools/29.0.3/aapt2 compile --dir old_apk_dir/res compiled_res.zip
          /Users/runner/Library/Android/sdk/build-tools/29.0.3/aapt2 link --proto-format -o base.apk -I ./android.jar --min-sdk-version 26 --target-sdk-version 33 --version-code 100 --version-name 1.0.0 --manifest old_apk_dir/AndroidManifest.xml -R compiled_res.zip --auto-add-overlay
          unzip base.apk -d new_apk_dir

          cd new_apk_dir
          mkdir manifest
          mkdir root
          mkdir root/META-INF
          mkdir dex

          cp AndroidManifest.xml ./manifest
          cp -r ../old_apk_dir/lib .
          cp -r ../old_apk_dir/asset .
          cp -r ../old_apk_dir/unknown/* ./root/
          cp -r ../old_apk_dir/kotlin ./root
          cp -r ../old_apk_dir/*.dex ./root/dex

          unzip -r new_apk.zip .

          java -jar /Users/runner/work/testapk/bundletool.jar build-bundle --modules=new_apk.zip --output=release.aab
        working-directory: /Users/runner/work/testapk


      - name: ls testapk
        run: |
          pwd
          ls
        working-directory: /Users/runner/work/testapk

      - name: ls testapk testapk
        run: |
          pwd
          ls
        working-directory: /Users/runner/work/testapk/new_apk_dir


      - name: sign aab
        run: jarsigner -digestalg SHA-256 -sigalg SHA256withRSA -keystore release.keystore -storepass '${{ secrets.KEY_STORE_PASSWORD }}' -keypass '${{ secrets.KEY_STORE_PASSWORD }}' ./new_apk_dir/elease.aab release
        working-directory: /Users/runner/work/testapk


      - name: ls testapk2
        run: |
          pwd
          ls
        working-directory: /Users/runner/work/testapk

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ secrets.VERSION }}
          release_name: Release ${{ secrets.VERSION }}
          commit: main

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}{?name,label}
          asset_path: ./release.aab
          asset_name: release.aab
          asset_content_type: application/octet-stream
          asset_label: important
          working-directory: /Users/runner/work/testapk
