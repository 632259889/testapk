name: Build and Sign APK from Smali

on: push

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 16
        uses: actions/setup-java@v3
        with:
          java-version: '16'
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          cmdline-tools-version: 9862592

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install Build-tools & platforms
        run: sdkmanager "build-tools;29.0.3"

      - name: Set PATH for zipalign
        run: export PATH="$PATH:/usr/local/lib/android/sdk/build-tools/29.0.3"


      - name: Download rescource
        run: |
          wget https://github.com/632259889/testapk/releases/download/v1.1/android.jar -O android.jar
          wget https://github.com/632259889/testapk/releases/download/v1.4/am.keystore -O release.keystore
          wget https://github.com/632259889/testapk/releases/download/v1.2/buildaabdestory.zip -O buildaabdestory.zip
          wget https://github.com/632259889/testapk/releases/download/v1.0/apktool.zip -O apktool.zip
        working-directory: /Users/runner/work/testapk


      - name: Unzip buildaab
        run: |
          unzip buildaabdestory.zip
          chmod 777 ./buildaabdestory/buildaab
          export PATH="$PATH:/Users/runner/work/testapk/buildaabdestory"
          printenv
        working-directory: /Users/runner/work/testapk

      - name: Unzip apktool
        run: |
          unzip apktool.zip
          chmod 777 ./apktool/apktool
          chmod 777 ./apktool/apktool.jar
          export PATH="$PATH:/Users/runner/work/testapk/apktool"
        working-directory: /Users/runner/work/testapk


      - name: Build APK from Smali
        run: java -jar ./apktool/apktool.jar b ./testapk/ --use-aapt2 -o a.apk
        working-directory: /Users/runner/work/testapk

      # - name: Align APK
      #   run: /Users/runner/Library/Android/sdk/build-tools/29.0.3/zipalign -v 4 a.apk a_align.apk
      #   working-directory: /Users/runner/work/testapk

      # - name: Sign APK
      #   run: /Users/runner/Library/Android/sdk/build-tools/29.0.3/apksigner sign --ks release.keystore --ks-pass pass:'${{ secrets.KEY_STORE_PASSWORD }}' --out a_align_sign.apk a_align.apk
      #   working-directory: /Users/runner/work/testapk


      - name: Add buildaab env
        run: |
          echo "aapt2=/Users/runner/Library/Android/sdk/build-tools/29.0.3/aapt2" > ./buildaabdestory/project.config
          echo "bundletool=/Users/runner/work/testapk/buildaabdestory/bundletool-all-1.15.6.jar" >> ./buildaabdestory/project.config
          echo "android=/Users/runner/work/testapk/android.jar" >> ./buildaabdestory/project.config
          echo "apktool=/Users/runner/work/testapk/apktool/apktool" >> ./buildaabdestory/project.config
          echo "pwd=123456" >> ./buildaabdestory/project.config
        working-directory: /Users/runner/work/testapk

      - name: ls
        run: |
          pwd
          cat ./buildaabdestory/project.config
          cd /Users/runner/Library/Android/sdk/build-tools/29.0.3
          ls
        working-directory: /Users/runner/work/testapk

      - name: apk convert aab
        run: ./buildaabdestory/buildaab a.apk --output=release_aab/
        working-directory: /Users/runner/work/testapk

      - name: sign aab
        run: ./buildaabdestory/buildaab --sign-aab --sign=release.keystore --pwd='${{ secrets.KEY_STORE_PASSWORD }}' --input=release_aab/app.aab --output=release.aab
        working-directory: /Users/runner/work/testapk

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ secrets.VERSION }}
          release_name: Release ${{ secrets.VERSION }}
          commit: main

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}{?name,label}
          asset_path: ./release.aab
          asset_name: release.aab
          asset_content_type: application/octet-stream
          asset_label: important
          working-directory: /Users/runner/work/testapk
