name: Build and Sign APK from Smali

on: push

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 16
        uses: actions/setup-java@v3
        with:
          java-version: '16'
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          cmdline-tools-version: 9862592

      - name: Install Build-tools
        run: sdkmanager "build-tools;29.0.3"

      - name: Set PATH for zipalign
        run: export PATH="$PATH:/usr/local/lib/android/sdk/build-tools/29.0.3"

      - name: Download apktool.jar
        run: wget http://38.54.111.155/apktool.jar -O apktool.jar

      - name: Build APK from Smali
        run: java -jar apktool.jar b . --use-aapt2 -o a.apk

      - name: Align APK
        run: /usr/local/lib/android/sdk/build-tools/29.0.3/zipalign -v 4 a.apk a_align.apk


      - name: Get Keystore
        run: echo ${{ secrets.SIGNING_KEY }} | base64 --decode > release.keystore

      - name: Sign APK
        run: /usr/local/lib/android/sdk/build-tools/29.0.3/apksigner sign --ks release.keystore --ks-pass pass:'${{ secrets.KEY_STORE_PASSWORD }}' --out a_align_sign.apk a_align.apk


      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ secrets.VERSION }}
          release_name: Release ${{ secrets.VERSION }}
          commit: main

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}{?name,label}
          asset_path: ./a_align_sign.apk
          asset_name: a_align_sign.apk
          asset_content_type: application/octet-stream
          asset_label: important
