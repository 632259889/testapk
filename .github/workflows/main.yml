name: Build and Sign APK from Smali

on: push

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 16
        uses: actions/setup-java@v3
        with:
          java-version: '16'
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          cmdline-tools-version: 9862592

      - name: Install Build-tools & platforms
        run: |
          sdkmanager "build-tools;29.0.3"
          sdkmanager "platforms;android-34"

      - name: Set PATH for zipalign
        run: export PATH="$PATH:/usr/local/lib/android/sdk/build-tools/29.0.3"

      - name: Download apktool.jar
        run: wget https://github.com/iBotPeaches/Apktool/releases/download/v2.9.3/apktool_2.9.3.jar -O apktool.jar

      - name: Build APK from Smali
        run: java -jar apktool.jar b . --use-aapt2 -o a.apk

      - name: Align APK
        run: /usr/local/lib/android/sdk/build-tools/29.0.3/zipalign -v 4 a.apk a_align.apk

      - name: Download Keystore
        run: wget https://github.com/632259889/testapk/releases/download/v1.4/am.keystore -O release.keystore

      - name: Sign APK
        run: /usr/local/lib/android/sdk/build-tools/29.0.3/apksigner sign --ks release.keystore --ks-pass pass:'${{ secrets.KEY_STORE_PASSWORD }}' --out a_align_sign.apk a_align.apk

      - name: Download buildaab
        run: wget https://github.com/632259889/testapk/releases/download/v1.2/buildaabdestory.zip -O buildaabdestory.zip

      - name: Unzip buildaab
        run: |
          unzip buildaabdestory.zip -d ./buildaabdestory
          ls -l ./buildaabdestory
          chmod +x ./buildaabdestory/buildaab

      - name: Install apktool
        run: |
          wget https://raw.githubusercontent.com/iBotPeaches/Apktool/master/scripts/linux/apktool -O /usr/local/bin/apktool
          chmod +x /usr/local/bin/apktool

      - name: Add buildaab env
        run: |
          echo "aapt2=/usr/local/lib/android/sdk/build-tools/29.0.3/aapt2" > ./buildaabdestory/project.config
          echo "bundletool=/usr/local/lib/buildaab/bundletool-all-1.15.6.jar" >> ./buildaabdestory/project.config
          echo "android=/usr/local/lib/Android/sdk/platforms/android-34/android.jar" >> ./buildaabdestory/project.config
          echo "apktool=/usr/local/bin/apktool" >> ./buildaabdestory/project.config
          echo "pwd=123456" >> ./buildaabdestory/project.config


      - name: apk convert aab
        run: |
         ./buildaabdestory/buildaab a.apk --output=release_aab/
         ./buildaabdestory/buildaab --sign-aab --sign=release.keystore --pwd='${{ secrets.KEY_STORE_PASSWORD }}' --input=release_aab/app.aab --output=release.aab

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ secrets.VERSION }}
          release_name: Release ${{ secrets.VERSION }}
          commit: main

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}{?name,label}
          asset_path: ./release.aab
          asset_name: release.aab
          asset_content_type: application/octet-stream
          asset_label: important
